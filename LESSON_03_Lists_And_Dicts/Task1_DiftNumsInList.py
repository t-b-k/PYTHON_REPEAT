"""
Дан список целых чисел. 
Определить, сколько в нем различных чисел. 
Список может быть задан изначально либо введен пользователем.
"""
"""
НЕМНОГО ТЕОРИИ. 
1. СОЗДАНИЕ СПИСКОВ
    1) list_1 = [] //Будет создан пустой список
    2) list_1 = list() // То же самое
Элементы списка выводятся на экран через запятую и в квадратных скобках: 
print(list_1)
    Список необязательно должен содержать однотипные объекты: 
    objects = [1, 2.6, "Hello", True]

Список можно инициализировать сразу при создании: 
list_1 = [1, 7, 10, -3]
print(list_1)
Другой способ вывода: 
for i in list_1 : 
    print(i)

2. ОПРЕДЕЛЕНИЕ ДЛИНЫ СПИСКА: 
len(<имя переменной-списка>)

3. НУМЕРАЦИЯ ЭЛЕМЕНТОВ СПИСКА: элементы списка нумеруются с 0, т.е. 1-й элемент всегда имеет индекс ноль. 
К i-му элементу списка можно обратиться по индексу: list_1[i]

Поддерживается циклическая индексация, то есть: к последнему элементу списка из N элементов можно обратиться 
как по индексу (N-1), так и по индексу (0-1) = -1

4. ДОБАВЛЕНИЕ ЭЛЕМЕНТОВ В КОНЕЦ СПИСКА: append
<переменная списка>.append(<значение>)

extend применяется к списочным типам: список-адресат пополняется элементами списка-аргумента: 

n = [1, 4.4, 'str', False, [1,2], 7]
print(n.append([7,8])) => [1, 4.4, 'str', False, [1,2], 7, [7,8]]
print(n.extend([7,8])) => [1, 4.4, 'str', False, [1,2], 7, [7,8], 7, 8]
print(n.count(7)) => 2 - посчитаются 7-ки как отдельные элементы списка n


5. УДАЛЕНИЕ ПОСЛЕДНЕГО ЭЛЕМЕНТА СПИСКА (его значение возвращается данной функцией): 
<переменная списка>.pop()

6. УДАЛЕНИЕ КОНКРЕТНОГО ЭЛЕМЕНТА ИЗ СПИСКА: 
<переменная списка>.pop(<индекс удаляемого элемента>)

pop(-1) - удаление последнего элемента

del(<переменная-список>[<индекс удаляемого элемента>]) - удаление из списка элемента с определенным индексом

<переменная списка>.remove(<элемент>) - удаление из списка первого вхождения элемента <элемент>
n = [1, 4.4, 'str', True, False, [1,2], 7, [7,8], 7, 8]
n.remove(7) => [1, 4.4, 'str', True, False, [1,2], [7,8], 7, 8]

7. ДОБАВЛЕНИЕ ЭЛЕМЕНТА НА НУЖНУЮ ПОЗИЦИЮ: 
<переменная списка>.insert(<индекс_позиции>, <добавляемое значение>)
Есть еще add и extend - в "хвостик"
Во всех случаях длина списка увеличится, никакие элементы не пропадут. 

8. СРЕЗЫ: вывод на экран частей списка
print(list_1[0]) - вывести 1-й элемент
print(list_1[len(list_1)-1]) - вывести последний элемент
print(list_1[-1]) - вывести последний элемент
print(list_1[:]) - вывести список полностью
print(list_1) - вывести список полностью
print(list_1[i:j]) - вывести элементы списка с индексами i,...,(j-1)
print(list_1[len(list_1)-j:]) - вывести последние j элементов
print(list_1[i:len(list_1):6]) - вывести элемент с индексом i и затем все оставшиеся с шагом 6
print(list_1[6:-18]) - []

"""
counter = int(input("Введите количество элементов в списке чисел: "))
numbers = []
for i in range(counter) : 
    numbers.append(int(input("Введите следующее число => ")))
print(numbers)
num_values = len(set(numbers))
# set не поддерживает индексацию, там элементы хранятся вперемешку
print(set(numbers))
print(num_values)